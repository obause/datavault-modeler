# Generated by Django 5.2.4 on 2025-07-15 19:11

from django.db import migrations


def populate_global_columns(apps, schema_editor):
    """Populate global_columns for existing Settings records"""
    Settings = apps.get_model('modeler', 'Settings')
    
    default_global_columns = [
        {
            'id': 'record_source',
            'name': 'record_source',
            'dataType': 'VARCHAR(100)',
            'markers': ['RSRC'],
            'description': 'Source system identifier',
            'isRequired': True,
            'isEnabled': True
        },
        {
            'id': 'load_date',
            'name': 'load_date',
            'dataType': 'TIMESTAMP',
            'markers': ['LDTS'],
            'description': 'Date when record was loaded',
            'isRequired': True,
            'isEnabled': True
        }
    ]
    
    # Update all Settings records that have empty or null global_columns
    for settings in Settings.objects.all():
        if not settings.global_columns:
            settings.global_columns = default_global_columns
            settings.save()


def reverse_populate_global_columns(apps, schema_editor):
    """Remove global_columns (for rollback)"""
    Settings = apps.get_model('modeler', 'Settings')
    for settings in Settings.objects.all():
        settings.global_columns = []
        settings.save()


class Migration(migrations.Migration):

    dependencies = [
        ('modeler', '0007_settings_global_columns'),
    ]

    operations = [
        migrations.RunPython(
            populate_global_columns, 
            reverse_populate_global_columns
        ),
    ]
