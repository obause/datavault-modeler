name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  backend-test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: dvw
          POSTGRES_USER: dvw
          POSTGRES_PASSWORD: dvw
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      
      - name: Install dependencies
        run: |
          cd backend
          poetry install
      
      - name: Run migrations
        run: |
          cd backend
          poetry run python manage.py migrate
        env:
          DB_HOST: localhost
          DB_PORT: 5432
          DB_NAME: dvw
          DB_USER: dvw
          DB_PASSWORD: dvw
      
      - name: Run tests
        run: |
          cd backend
          poetry run pytest
        env:
          DB_HOST: localhost
          DB_PORT: 5432
          DB_NAME: dvw
          DB_USER: dvw
          DB_PASSWORD: dvw

  frontend-test:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: frontend/dvw-frontend/package-lock.json
      
      - name: Install dependencies
        run: |
          cd frontend/dvw-frontend
          npm ci
      
      - name: Build application
        run: |
          cd frontend/dvw-frontend
          npm run build
      
      - name: Run tests
        run: |
          cd frontend/dvw-frontend
          npm run test

  docker-build:
    runs-on: ubuntu-latest
    needs: [backend-test, frontend-test]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Build Docker images
        run: |
          cd docker
          docker compose build
      
      - name: Test Docker stack
        run: |
          cd docker
          docker compose up -d
          sleep 30
          curl -f http://localhost:8000/api/models/ || exit 1
          curl -f http://localhost:5173/ || exit 1
          docker compose down 